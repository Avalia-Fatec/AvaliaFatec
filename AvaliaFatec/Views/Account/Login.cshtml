@model AvaliaFatec.Models.Coordenador
@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="form-geral">
<link href="~/css/logar.css" rel="stylesheet" />
    <h1>Login</h1>
    <div asp-validation-summary="All" class="text-danger"></div>

    <form asp-action="Login" method="post">
        <div>
            <label asp-for="Email"></label>
            <input asp-for="Email" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="senha-container">
            <label asp-for="Senha"></label>
            <input asp-for="Senha" type="password" id="senha" />
            <i class="bi bi-eye senha-icon" onclick="mostrarSenha('senha', this)"></i>
            <span asp-validation-for="Senha" class="text-danger"></span>
        </div>

        <div class="botoes">
            <div class="btn-container">
                <button type="submit" class="enviar">Enviar</button>
            </div>
            <div class="btn-container">
                <button type="reset" class="limpar">Limpar</button>
            </div>
        </div>
    </form>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <script>
            function mostrarSenha(idCampo, icone) {
                const campo = document.getElementById(idCampo);
                if (campo.type === "password") {
                    campo.type = "text";
                    icone.classList.remove("bi-eye");
                    icone.classList.add("bi-eye-slash");
                } else {
                    campo.type = "password";
                    icone.classList.remove("bi-eye-slash");
                    icone.classList.add("bi-eye");
                }
            }
        </script>
    }
}